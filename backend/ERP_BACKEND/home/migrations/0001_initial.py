# Generated by Django 4.0.3 on 2022-05-20 10:50

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import home.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SimpleUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(default='', help_text='Insert The User Name', max_length=40, verbose_name='Name:')),
                ('last_name', models.CharField(default='', help_text='Insert The User Last Name', max_length=40, verbose_name='Last Name:')),
                ('username', models.CharField(help_text='Insert The Colaborator USERID', max_length=8, unique=True, verbose_name='Intern User')),
                ('email', models.EmailField(default='', help_text='Insert The Colaborator Email', max_length=80, verbose_name='Email')),
                ('edv', models.CharField(default='', help_text='Insert The Colaborator EDV', max_length=12, verbose_name='EDV')),
                ('password', models.CharField(default='', help_text='Insert you password', max_length=500, verbose_name='Password')),
                ('birthDate', models.DateField(auto_now_add=True, help_text='Insert The Colaborator Birth Date', null=True, verbose_name='Birth Date')),
                ('user_img', models.ImageField(blank=True, default='users/default_user.png', null=True, upload_to='users/')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(help_text='Insert the current area', max_length=40, verbose_name='Area')),
                ('areaAbrv', models.CharField(help_text='Insert the abbreviation of the area', max_length=10, verbose_name='Area Abbreviation')),
            ],
        ),
        migrations.CreateModel(
            name='DDS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', help_text='Insert The Title', max_length=50, null=True, verbose_name='Title')),
                ('frontImg', models.ImageField(blank=True, default='', help_text='Insert Front Image', null=True, upload_to=home.models.changeImgName, verbose_name='Front Image')),
                ('frontText', models.CharField(blank=True, default='', help_text='Insert Front Text', max_length=1000, null=True, verbose_name='Front Text')),
                ('backImg', models.ImageField(blank=True, default='', help_text='Insert Back Image', null=True, upload_to=home.models.changeImgName, verbose_name='Front Image')),
                ('backText', models.CharField(blank=True, default='', help_text='Insert Back Text', max_length=1000, null=True, verbose_name='Back Text')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=40)),
                ('event_responsible', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date', models.DateField(default='')),
                ('startTime', models.TimeField(default='')),
                ('endTime', models.TimeField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localName', models.CharField(default='', max_length=80)),
                ('businessPoint', models.CharField(default='', max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatrolQuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(default='', help_text='Insert The Patrol Question', max_length=1000, verbose_name='Question')),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant', models.CharField(help_text='Insert the current plant', max_length=25, verbose_name='Plant')),
                ('plantAbrv', models.CharField(help_text='Insert the abbreviation of the plant', max_length=10, verbose_name='Plant Abbreviation')),
            ],
        ),
        migrations.CreateModel(
            name='PossibleAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(help_text='Insert The Possible Answer', max_length=100, verbose_name='Answer')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SSMType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', help_text='Insert SSM Type name', max_length=100, verbose_name='Type')),
            ],
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', help_text='Selected System Name', max_length=100, null=True, verbose_name='Selected System Name')),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('router_to', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('icon', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Insert the Team name', max_length=50, verbose_name='Name')),
                ('qttMates', models.IntegerField(blank=True, default=0, help_text='Insert the quantity of members', null=True, verbose_name='Quantity of Mates')),
                ('fk_area', models.ForeignKey(blank=True, help_text='Insert the Area', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.area', verbose_name='Area')),
                ('fk_plant', models.ForeignKey(blank=True, help_text='Select the plant', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.plant', verbose_name='Plant')),
            ],
        ),
        migrations.CreateModel(
            name='TeamEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_event', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='home.event')),
                ('fk_team', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='home.team')),
            ],
        ),
        migrations.CreateModel(
            name='SSM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', help_text='Insert The Title', max_length=50, verbose_name='Title')),
                ('file', models.FileField(upload_to='ssm/pdfs/')),
                ('miniImg', models.ImageField(blank=True, default='', help_text='Insert Front Image', null=True, upload_to='ssm/imgs/', verbose_name='Front Image')),
                ('fk_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='home.ssmtype')),
            ],
        ),
        migrations.CreateModel(
            name='PatrolWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initialDate', models.DateField(help_text='Insert The Initial Patrol Date', verbose_name='Initial Date')),
                ('fk_patrol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatrolAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answerDay', models.DateField(help_text='Insert The Date', verbose_name='Date')),
                ('fk_answer', models.ForeignKey(default='', help_text='Insert The Answer', on_delete=django.db.models.deletion.CASCADE, to='home.possibleanswer', verbose_name='Answer')),
                ('fk_patrolquest', models.ForeignKey(help_text='Insert The Patrol Quest', on_delete=django.db.models.deletion.CASCADE, to='home.patrolquest', verbose_name='Quest')),
                ('fk_patroweek', models.ForeignKey(help_text='Insert The Patrol Week', on_delete=django.db.models.deletion.CASCADE, to='home.patrolweek', verbose_name='Date')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='fk_team',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='home.team', verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.location'),
        ),
        migrations.CreateModel(
            name='AccessLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], default=1)),
                ('name', models.CharField(max_length=20)),
                ('profiles', models.ManyToManyField(to='home.profileservice')),
            ],
        ),
        migrations.AddField(
            model_name='simpleuser',
            name='currentLevel',
            field=models.ForeignKey(blank=True, default='', help_text='Insert The Colaborator Access Level', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.accesslevel', verbose_name='Access Level'),
        ),
        migrations.AddField(
            model_name='simpleuser',
            name='fk_team',
            field=models.ManyToManyField(blank=True, null=True, to='home.team'),
        ),
        migrations.AddField(
            model_name='simpleuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='simpleuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
